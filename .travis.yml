language: docker

# install:
# - mvn compile

script:
- echo "Building Application"
- mvn package
- echo "Building Docker Container"
- printenv
- docker build --label CSV_URL="${GIT_URL}" --label COMMIT="${GIT_COMMIT}" -t "localhost:5001/docker/${JOB_NAME}:${BUILD_ID}" .
- docker tag "localhost:5001/docker/${JOB_NAME}:${BUILD_ID}" "localhost:5001/docker/${JOB_NAME}:latest"
- echo "Pushing Container to Registry"
- docker push "localhost:5001/docker/${JOB_NAME}:${BUILD_ID}"
- docker push "localhost:5001/docker/${JOB_NAME}:latest"

before_deploy:
- echo "PreDeployment Version"
- kubectl version
deploy:
# We can't really do an apply unless we template out this file. However, this
# would work very well for the *first* deployment
- echo "kubectl apply"
- kubectl apply -f ./java-application.yml --record

# However, the following code won't work the first time we run this plan...
- echo "Updating image in deployment to localhost:5001/docker/${JOB_NAME}:${BUILD_ID}"
- kubectl set image deployment/my-java-app my-java-app=localhost:5001/docker/${JOB_NAME}:${BUILD_ID} --namespace team-1 --record
- echo "Rolling out update"
- kubectl rollout status deployment/my-java-app --namespace team-1
- echo "Showing rollout history"
- kubectl rollout history deployment/my-java-app --namespace team-1
